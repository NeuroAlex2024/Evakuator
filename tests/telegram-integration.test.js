const { test, expect } = require('@playwright/test');

test.describe('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram', () => {
    
    test.beforeEach(async ({ page }) => {
        await page.goto('file://' + process.cwd() + '/index.html');
        await page.waitForLoadState('networkidle');
    });

    test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤ Telegram', async ({ page }) => {
        let telegramRequestMade = false;
        let requestData = null;

        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –∫ Telegram API
        await page.route('**/api.telegram.org/**', async route => {
            telegramRequestMade = true;
            const request = route.request();
            requestData = JSON.parse(request.postData() || '{}');
            
            // –°–∏–º—É–ª–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Telegram
            await route.fulfill({
                status: 200,
                contentType: 'application/json',
                body: JSON.stringify({ ok: true, result: { message_id: 123 } })
            });
        });

        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        const consoleMessages = [];
        page.on('console', msg => {
            consoleMessages.push(msg.text());
        });

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        await page.click('button:has-text("–ü–ï–†–ï–ó–í–û–ù–ò–¢–¨ –ú–ù–ï")');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã–ª–æ—Å—å
        const modal = page.locator('#callbackModal');
        await expect(modal).toBeVisible();
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        await page.fill('#clientName', '–¢–µ—Å—Ç –¢–µ–ª–µ–≥—Ä–∞–º');
        await page.fill('#clientPhone', '9001234567');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        await page.click('button[type="submit"]');
        
        // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
        await page.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –∫ Telegram –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        expect(telegramRequestMade).toBe(true);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        expect(requestData).toBeTruthy();
        expect(requestData.chat_id).toBe('352283464');
        expect(requestData.text).toContain('–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –≠–í–ê–ö–£–ê–¢–û–†');
        expect(requestData.text).toContain('–¢–µ—Å—Ç –¢–µ–ª–µ–≥—Ä–∞–º');
        expect(requestData.text).toContain('+7 (900) 123-45-67');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        const successMessage = consoleMessages.find(msg => 
            msg.includes('‚úÖ –ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram')
        );
        expect(successMessage).toBeTruthy();
    });

    test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏ Telegram API', async ({ page }) => {
        let telegramRequestMade = false;

        // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ—Ç Telegram API
        await page.route('**/api.telegram.org/**', async route => {
            telegramRequestMade = true;
            await route.fulfill({
                status: 400,
                contentType: 'application/json',
                body: JSON.stringify({ ok: false, error_code: 400, description: 'Bad Request' })
            });
        });

        const consoleMessages = [];
        page.on('console', msg => {
            consoleMessages.push(msg.text());
        });

        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        await page.click('button:has-text("–ü–ï–†–ï–ó–í–û–ù–ò–¢–¨ –ú–ù–ï")');
        await page.fill('#clientName', '–¢–µ—Å—Ç –û—à–∏–±–∫–∞');
        await page.fill('#clientPhone', '9001234567');
        await page.click('button[type="submit"]');
        
        await page.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω
        expect(telegramRequestMade).toBe(true);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
        const errorMessage = consoleMessages.find(msg => 
            msg.includes('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram')
        );
        expect(errorMessage).toBeTruthy();
    });

    test('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram', async ({ page }) => {
        let requestData = null;

        await page.route('**/api.telegram.org/**', async route => {
            const request = route.request();
            requestData = JSON.parse(request.postData() || '{}');
            
            await route.fulfill({
                status: 200,
                contentType: 'application/json',
                body: JSON.stringify({ ok: true, result: { message_id: 123 } })
            });
        });

        // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
        await page.click('button:has-text("–ü–ï–†–ï–ó–í–û–ù–ò–¢–¨ –ú–ù–ï")');
        await page.fill('#clientName', '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤');
        await page.fill('#clientPhone', '9051234567');
        await page.click('button[type="submit"]');
        
        await page.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–æ–æ–±—â–µ–Ω–∏—è
        expect(requestData.text).toMatch(/üöõ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –ù–ê –≠–í–ê–ö–£–ê–¢–û–†/);
        expect(requestData.text).toMatch(/üë§ –ò–º—è: –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤/);
        expect(requestData.text).toMatch(/üì± –¢–µ–ª–µ—Ñ–æ–Ω: \+7 \(905\) 123-45-67/);
        expect(requestData.text).toMatch(/üïê –í—Ä–µ–º—è: \d{2}\.\d{2}\.\d{4}, \d{2}:\d{2}/);
        expect(requestData.text).toMatch(/‚ö° –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç—É —Å—Ä–æ—á–Ω–æ!/);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Chat ID
        expect(requestData.chat_id).toBe('352283464');
    });

    test('–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã –±–µ–∑ —Å–µ—Ç–∏', async ({ page }) => {
        // –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–µ—Ç–∏
        await page.route('**/api.telegram.org/**', async route => {
            await route.abort('connectionfailed');
        });

        const consoleMessages = [];
        page.on('console', msg => {
            consoleMessages.push(msg.text());
        });

        await page.click('button:has-text("–ü–ï–†–ï–ó–í–û–ù–ò–¢–¨ –ú–ù–ï")');
        await page.fill('#clientName', '–¢–µ—Å—Ç –°–µ—Ç—å');
        await page.fill('#clientPhone', '9001234567');
        await page.click('button[type="submit"]');
        
        await page.waitForTimeout(1000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
        const errorMessage = consoleMessages.find(msg => 
            msg.includes('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram')
        );
        expect(errorMessage).toBeTruthy();
    });
}); 